# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2020-2021 Intel Corporation

apiVersion: v1
kind: ServiceAccount
metadata:
  name: n3000-daemon
  namespace: "{{ .N3000_NAMESPACE }}"

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: n3000-daemon
  namespace: "{{ .N3000_NAMESPACE }}"
rules:
- apiGroups:
  - fpga.intel.com
  resources:
  - '*'
  - n3000nodes
  verbs:
  - '*'
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - '*'
- apiGroups:
  - security.openshift.io
  resources:
  - securitycontextconstraints
  verbs:
  - use
  resourceNames:
  - privileged

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: n3000-daemon
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch", "patch", "update"]
- apiGroups: ["apps"]
  resources: ["daemonsets"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["pods/eviction"]
  verbs: ["create"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: n3000-daemon
subjects:
- kind: ServiceAccount
  name: n3000-daemon
  namespace: "{{ .N3000_NAMESPACE }}"
roleRef:
  kind: ClusterRole
  name: n3000-daemon
  apiGroup: rbac.authorization.k8s.io
  namespace: "{{ .N3000_NAMESPACE }}"

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: n3000-daemon
  namespace: "{{ .N3000_NAMESPACE }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: n3000-daemon
  namespace: "{{ .N3000_NAMESPACE }}"
subjects:
- kind: ServiceAccount
  name: n3000-daemon
  namespace: "{{ .N3000_NAMESPACE }}"
userNames:
- system:serviceaccount:{{ .N3000_NAMESPACE }}:n3000-daemon

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: n3000-daemonset
  name: n3000-daemonset
  namespace: "{{ .N3000_NAMESPACE }}"
  annotations:
    openshift.io/scc: n3000-daemon
spec:
  selector:
    matchLabels:
      app: n3000-daemonset
  template:
    metadata:
      # Mark this pod as a critical add-on; when enabled, the critical add-on scheduler
      # reserves resources for critical add-on pods so that they can be rescheduled after
      # a failure.  This annotation works in tandem with the toleration below.
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        app: n3000-daemonset
    spec:
      nodeSelector:
        fpga.intel.com/intel-accelerator-present: ""
      tolerations:
      - key: intel.com/fpga
        operator: Exists
        effect: NoSchedule
      serviceAccount: n3000-daemon
      serviceAccountName: n3000-daemon
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - image: "{{ .N3000_DAEMON_IMAGE }}"
        imagePullPolicy: Always
        name: n3000-daemon
        args:
        - --zap-log-level=10
        volumeMounts:
          - name: devchar
            mountPath: /dev/char
          - name: devmem
            mountPath: /dev/mem
          - name: devkmem
            mountPath: /dev/kmem
          - name: devio
            mountPath: /dev/io
          - name: devpci
            mountPath: /dev/pci
          - name: bootkernel
            mountPath: /boot/kernel
          - name: libmodules
            mountPath: /lib/modules
          - name: sysfs
            mountPath: /sys
          - name: cache-volume
            mountPath: /n3000-workdir
          - name: tmp-volume
            mountPath: /tmp
          - name: run-volume
            mountPath: /run
        env:
          - name: N3000_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: NODENAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: DRAIN_TIMEOUT_SECONDS
            value: "90"
          - name: LEASE_DURATION_SECONDS
            value: "600"
        securityContext:
          privileged: true
          readOnlyRootFilesystem: false
          seLinuxOptions:
            level: "s0"
      volumes:
        - name: devchar
          hostPath:
            path: /dev/char
        - name: devmem
          hostPath:
            path: /dev/mem
        - name: devkmem
          hostPath:
            path: /dev/kmem
        - name: devio
          hostPath:
            path: /dev/io
        - name: devpci
          hostPath:
            path: /dev/pci
        - name: bootkernel
          hostPath:
            path: /boot/kernel
        - name: libmodules
          hostPath:
            path: /lib/modules
        - name: sysfs
          hostPath:
            path: /sys
        - name: cache-volume
          emptyDir: {}
        - name: tmp-volume
          emptyDir: {}
        - name: run-volume
          emptyDir: {}
